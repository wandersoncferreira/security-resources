* Security Resources :TOC_3_gh:
- [[#introduction][Introduction]]
- [[#courses][Courses]]
  - [[#web-development][Web Development]]
    - [[#programming-foundations-web-security][Programming Foundations: Web Security]]
  - [[#networking][Networking]]
    - [[#networking-concepts-and-protocols][Networking Concepts and Protocols]]
    - [[#cryptography-fundamentals-for-developers-and-security-professionals][Cryptography Fundamentals for Developers and Security Professionals]]
- [[#guides][Guides]]
  - [[#authentication-vs-authorization][Authentication vs Authorization]]
  - [[#improper-error-handling][Improper Error Handling]]

* Introduction

Curating resources is always a daunting task specially because there is no
guarantee that my choices will be useful to you at all. Anyway, document is
intended to keep myself organized and as a side effect this might help you
somehow.

Enjoy

* Courses

When possible I will provide a tl;dr version for each entry.

** Web Development

*** DONE [[https://www.linkedin.com/learning/programming-foundations-web-security-2?u=26890602][Programming Foundations: Web Security]]

by Linkedin Learning

   + awareness + adequate protection = Security
   + awareness can be improved by understanding more about possible motivaitons of attackers
   + principle of least privilege
     - control access to systems and resources
   + simpler is more secure
   + trust no one
   + defense depth
     - physical
     - technical
     - administrative
   + security through obscurity
   + data security goals (CIA)
     - confidentiality
     - integrity
     - availability
   + validate inputs
   + regulate requests
   + type cast received data at the first layers of your program
   + The most common attacks
     - URL manipulation and insecure direct object reference (IDOR)
     - SQL injection
     - cross-site scripting (XSS)
     - cross-site request forgery (CSRF)
       a. use CSRF tokens
     - cookie visibility and theft
     - session hijacking
     - session fixation
     - remote code execution (RCE)
     - file upload abuse
     - denial of service

** Networking

*** DONE [[https://app.pluralsight.com/library/courses/comptia-network-plus-networking-concepts/table-of-contents][Networking Concepts and Protocols]]

by Pluralsight

   - OSI model
     | number | layer        |
     |--------+--------------|
     |      7 | Application  |
     |      6 | Presentation |
     |      5 | Session      |
     |      4 | Transport    |
     |      3 | Network      |
     |      2 | Data Link    |
     |      1 | Physical     |

*** DONE [[https://app.pluralsight.com/library/courses/cryptography-fundamentals-java-dotnet-developers/table-of-contents][Cryptography Fundamentals for Developers and Security Professionals]]

by Pluralsight

   - history about cryptography
   - detailed explanations about encryption algorithms
   - different options to handle authemtication and authorization
   - how to build trust
   - encryption in decentralized systems

* Guides

** [[https://www.okta.com/identity-101/authentication-vs-authorization/][Authentication vs Authorization]]
** [[https://owasp.org/www-community/Improper_Error_Handling][Improper Error Handling]]

A web application, for example, has many scenarios where errors can occur e.g.
database failure, out of memory, high workload, unauthorized access, and so on.
We must be vigilant to how we handle this error and avoid leakage of internal
information to a potential attacker.

All the errors returned from our application must be designed to provide a good
balance of usefulness to real users, diagnostic capabilities to operations, and
obscurity to an attacker.

Preferably, we keep a well documented guideline about error messages and error
codes to make it consistent and well used inside the team.

